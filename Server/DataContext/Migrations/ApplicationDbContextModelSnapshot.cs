// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asfalis.Server.DataContext;

#nullable disable

namespace asfalis.Server.DataContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("asfalis.Shared.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("image_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("name");

                    b.HasKey("ImageId");

                    b.ToTable("images", (string)null);
                });

            modelBuilder.Entity("asfalis.Shared.Models.QRCode", b =>
                {
                    b.Property<int>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("code_id");

                    b.Property<bool>("CodeExpired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("code_expired");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expiry_time");

                    b.Property<string>("OTPCode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("otp_code");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CodeId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("qr_codes", (string)null);
                });

            modelBuilder.Entity("asfalis.Shared.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("AccessFailedTime")
                        .HasColumnType("int")
                        .HasColumnName("access_failed_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("email_confirmed");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("gender");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("lockout_end");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.HasIndex("Username", "Email")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("asfalis.Shared.Models.UserImage", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("ImageId")
                        .HasColumnType("int")
                        .HasColumnName("image_id");

                    b.HasKey("UserId", "ImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("user_image", (string)null);
                });

            modelBuilder.Entity("asfalis.Shared.Models.QRCode", b =>
                {
                    b.HasOne("asfalis.Shared.Models.User", "User")
                        .WithOne("QRCode")
                        .HasForeignKey("asfalis.Shared.Models.QRCode", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("asfalis.Shared.Models.UserImage", b =>
                {
                    b.HasOne("asfalis.Shared.Models.Image", "Image")
                        .WithMany("UserImages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asfalis.Shared.Models.User", "User")
                        .WithMany("UserImages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("User");
                });

            modelBuilder.Entity("asfalis.Shared.Models.Image", b =>
                {
                    b.Navigation("UserImages");
                });

            modelBuilder.Entity("asfalis.Shared.Models.User", b =>
                {
                    b.Navigation("QRCode");

                    b.Navigation("UserImages");
                });
#pragma warning restore 612, 618
        }
    }
}
